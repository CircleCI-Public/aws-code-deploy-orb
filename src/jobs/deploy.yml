description:
      "Ensures an application and deployment group exist then proceeds to
       bundle and upload an application revision to S3. Once uploaded this
       job will finally create a deployment based on that revision."
parameters:
  application-name:
    description:
      "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
    type: string
  deployment-group:
    description:
      "The name of a new deployment group for the specified application."
    type: string
  deployment-config:
    description:
      "Predefined deployment configuration name."
    type: string
    default: "CodeDeployDefault.OneAtATime"
  service-role-arn:
    description:
      "The service role for a deployment group."
    type: string
  bundle-source:
    description:
      "The directory relative to your project to package up into an application revision."
    type: string
    default: "."
  bundle-bucket:
    description:
      "The s3 bucket where an application revision will be stored"
    type: string
  bundle-key:
    description:
      "A key under the s3 bucket where an application revision will be stored"
    type: string
  bundle-type:
    description:
      "The file type used for an application revision bundle. Currently defaults to 'zip'"
    type: string
    default: "zip"
  arguments:
    description: If you wish to pass any additional arguments to the aws deploy command
    type: string
    default: ''
  get-deployment-group-arguments:
    description: If you wish to pass any additional arguments to the get-deployment-group command
    type: string
    default: ''
  deploy-bundle-arguments:
    description: If you wish to pass any additional arguments to the deploy-bundle command
    type: string
    default: ''
executor: aws-cli/default
steps:
  - checkout
  - aws-cli/setup
  - create-application:
      application-name: << parameters.application-name >>
      arguments: << parameters.arguments >>
  - create-deployment-group:
      application-name: << parameters.application-name >>
      deployment-group: << parameters.deployment-group >>
      deployment-config: << parameters.deployment-config >>
      service-role-arn: << parameters.service-role-arn >>
      get-deployment-group-arguments: << parameters.get-deployment-group-arguments >>
      arguments: << parameters.arguments >>
  - push-bundle:
      application-name: << parameters.application-name >>
      bundle-source: << parameters.bundle-source >>
      bundle-bucket: << parameters.bundle-bucket >>
      bundle-key: << parameters.bundle-key >>
      bundle-type: << parameters.bundle-type >>
      arguments: << parameters.arguments >>
  - deploy-bundle:
      application-name: << parameters.application-name >>
      deployment-group: << parameters.deployment-group >>
      deployment-config: << parameters.deployment-config >>
      bundle-bucket: << parameters.bundle-bucket >>
      bundle-key: << parameters.bundle-key >>
      bundle-type: << parameters.bundle-type >>
      get-deployment-group-arguments: << parameters.get-deployment-group-arguments >>
      deploy-bundle-arguments: << parameters.deploy-bundle-arguments >>
