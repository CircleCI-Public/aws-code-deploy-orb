# How to author commands: https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-commands
description: |
  Creates a deployment group to which application revisions are deployed.
parameters:
  application-name:
    description:
      "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
    type: string
  deployment-group:
    description:
      "The name of a new deployment group for the specified application."
    type: string
  deployment-config:
    description:
      "Predefined deployment configuration name."
    type: string
    default: "CodeDeployDefault.OneAtATime"
  service-role-arn:
    description:
      "The service role for a deployment group."
    type: string
  arguments:
    description: If you wish to pass any additional arguments to the create-deployment-group command
    type: string
    default: ''
  get-deployment-group-arguments:
    description: If you wish to pass any additional arguments to the get-deployment-group command
    type: string
    default: ''
steps:
  - run:
      name: ensure-deployment-created
      command: |
        set +e
        aws deploy get-deployment-group \
          --application-name << parameters.application-name >> \
          --deployment-group-name << parameters.deployment-group >><<# parameters.get-deployment-group-arguments >> << parameters.get-deployment-group-arguments >><</parameters.get-deployment-group-arguments >>

        if [ $? -ne 0 ]; then
          set -e
          echo "No deployment group named << parameters.deployment-group >> found. Trying to create a new one"
          aws deploy create-deployment-group \
            --application-name << parameters.application-name >> \
            --deployment-group-name << parameters.deployment-group >> \
            --deployment-config-name << parameters.deployment-config >> \
            --service-role-arn << parameters.service-role-arn >><<# parameters.arguments >> << parameters.arguments >><</parameters.arguments >>
        else
          set -e
          echo "Deployment group named << parameters.deployment-group >> already exists. Skipping creation."
        fi
