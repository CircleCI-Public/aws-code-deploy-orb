description: |
  Creates a deployment group to which application revisions are deployed.
parameters:
  application-name:
    description:
      "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
    type: string
  deployment-group:
    description:
      "The name of a new deployment group for the specified application."
    type: string
  deployment-config:
    description:
      "Predefined deployment configuration name."
    type: enum
    enum: [ CodeDeployDefault.OneAtATime, CodeDeployDefault.HalfAtATime, CodeDeployDefault.AllAtOnce ]
    default: "CodeDeployDefault.OneAtATime"
  service-role-arn:
    description:
      "The service role for a deployment group."
    type: string
  arguments:
    description: If you wish to pass any additional arguments to the create-deployment-group command
    type: string
    default: ''
  get-deployment-group-arguments:
    description: If you wish to pass any additional arguments to the get-deployment-group command
    type: string
    default: ''
  profile-name:
    description:
      "The name of an AWS profile to use with aws-cli commands"
    type: string
    default: 'default'
  region:
    type: string
    default: ${AWS_DEFAULT_REGION}
    description: >
      AWS region of CodeDeploy App. Defaults to environment variable ${AWS_DEFAULT_REGION}.    
steps:
  - run:
      name: ensure-deployment-created
      environment:
        ORB_EVAL_APPLICATION_NAME: << parameters.application-name >>
        ORB_EVAL_DEPLOYMENT_GROUP: << parameters.deployment-group >>
        ORB_VAL_DEPLOYMENT_CONFIG: << parameters.deployment-config >>
        ORB_VAL_SERVICE_ROLE_ARN: << parameters.service-role-arn >>
        ORB_VAL_ARGUMENTS: << parameters.arguments >>
        ORB_VAL_GET_DEPLOYMENT_GROUP_ARGUMENTS: << parameters.get-deployment-group-arguments >>
        ORB_VAL_PROFILE_NAME: << parameters.profile-name >>
        ORB_EVAL_REGION: << parameters.region >>
      command: << include(scripts/create-deployment-group.sh) >>
